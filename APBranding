# If we are running as a 32-bit process on an x64 system, re-launch as a 64-bit process
if ($env:PROCESSOR_ARCHITEW6432 -ne "ARM64") {
    $sysNativePSPath = Join-Path -Path $env:WINDIR -ChildPath "SysNative\WindowsPowerShell\v1.0\powershell.exe"
    if (Test-Path $sysNativePSPath) {
        & $sysNativePSPath -ExecutionPolicy Bypass -NoProfile -File $PSCommandPath
        exit $LASTEXITCODE
    }
}

# Create a tag file just so Intune knows this was installed
$autopilotBrandingPath = Join-Path -Path $env:ProgramData -ChildPath "Microsoft\AutopilotBranding"
if (-not (Test-Path $autopilotBrandingPath)) {
    New-Item -ItemType Directory -Path $autopilotBrandingPath | Out-Null
}
Set-Content -Path (Join-Path -Path $autopilotBrandingPath -ChildPath "AutopilotBranding.ps1.tag") -Value "Installed"

# Start logging
Start-Transcript (Join-Path -Path $autopilotBrandingPath -ChildPath "AutopilotBranding.log")

# PREP: Load the Config.xml
$installFolder = $PSScriptRoot
Write-Host "Install folder: $installFolder"
Write-Host "Loading configuration: $($installFolder)Config.xml"
[Xml]$config = Get-Content (Join-Path -Path $installFolder -ChildPath "Config.xml")

# STEP 1: Remove specified provisioned apps if they exist
Write-Host "Removing specified in-box provisioned apps"
$apps = Get-AppxProvisionedPackage -Online
$config.Config.RemoveApps.App | ForEach-Object {
    $current = $_
    $apps | Where-Object { $_.DisplayName -eq $current } | ForEach-Object {
        Write-Host "Removing provisioned app: $current"
        $_ | Remove-AppxProvisionedPackage -Online | Out-Null
    }
}

# STEP 2: Install OneDrive per machine
if ($config.Config.OneDriveSetup) {
    Write-Host "Downloading OneDriveSetup"
    $dest = Join-Path -Path $env:TEMP -ChildPath "OneDriveSetup.exe"
    (New-Object System.Net.WebClient).DownloadFile($config.Config.OneDriveSetup, $dest)
    Write-Host "Installing: $dest"
    $proc = Start-Process -FilePath $dest -ArgumentList "/allusers" -WindowStyle Hidden -PassThru
    $proc.WaitForExit()
    Write-Host "OneDriveSetup exit code: $($proc.ExitCode)"
}

# STEP 3: Customize default apps
if ($config.Config.DefaultApps) {
    Write-Host "Setting default apps: $($config.Config.DefaultApps)"
    & Dism.exe /Online /Import-DefaultAppAssociations:(Join-Path -Path $installFolder -ChildPath $config.Config.DefaultApps)
}

# STEP 4: Disable network location fly-out
Write-Host "Turning off network location fly-out"
& reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\Network\NewNetworkWindowOff" /f
